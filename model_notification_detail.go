/*
ForestVPN API

ForestVPN defeats content restrictions and censorship to deliver unlimited access to video, music, social media, and more, from anywhere in the world. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
	"time"
)

// NotificationDetail struct for NotificationDetail
type NotificationDetail struct {
	Id int32 `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	Title string `json:"title"`
	Summary string `json:"summary"`
	FeaturedImage FeaturedImage `json:"featured_image"`
	Content string `json:"content"`
	IsUnread bool `json:"is_unread"`
	IsFeatured bool `json:"is_featured"`
}

// NewNotificationDetail instantiates a new NotificationDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationDetail(id int32, createdAt time.Time, title string, summary string, featuredImage FeaturedImage, content string, isUnread bool, isFeatured bool) *NotificationDetail {
	this := NotificationDetail{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Title = title
	this.Summary = summary
	this.FeaturedImage = featuredImage
	this.Content = content
	this.IsUnread = isUnread
	this.IsFeatured = isFeatured
	return &this
}

// NewNotificationDetailWithDefaults instantiates a new NotificationDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationDetailWithDefaults() *NotificationDetail {
	this := NotificationDetail{}
	return &this
}

// GetId returns the Id field value
func (o *NotificationDetail) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NotificationDetail) SetId(v int32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *NotificationDetail) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *NotificationDetail) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetTitle returns the Title field value
func (o *NotificationDetail) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *NotificationDetail) SetTitle(v string) {
	o.Title = v
}

// GetSummary returns the Summary field value
func (o *NotificationDetail) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *NotificationDetail) SetSummary(v string) {
	o.Summary = v
}

// GetFeaturedImage returns the FeaturedImage field value
func (o *NotificationDetail) GetFeaturedImage() FeaturedImage {
	if o == nil {
		var ret FeaturedImage
		return ret
	}

	return o.FeaturedImage
}

// GetFeaturedImageOk returns a tuple with the FeaturedImage field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetFeaturedImageOk() (*FeaturedImage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeaturedImage, true
}

// SetFeaturedImage sets field value
func (o *NotificationDetail) SetFeaturedImage(v FeaturedImage) {
	o.FeaturedImage = v
}

// GetContent returns the Content field value
func (o *NotificationDetail) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *NotificationDetail) SetContent(v string) {
	o.Content = v
}

// GetIsUnread returns the IsUnread field value
func (o *NotificationDetail) GetIsUnread() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUnread
}

// GetIsUnreadOk returns a tuple with the IsUnread field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetIsUnreadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUnread, true
}

// SetIsUnread sets field value
func (o *NotificationDetail) SetIsUnread(v bool) {
	o.IsUnread = v
}

// GetIsFeatured returns the IsFeatured field value
func (o *NotificationDetail) GetIsFeatured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFeatured
}

// GetIsFeaturedOk returns a tuple with the IsFeatured field value
// and a boolean to check if the value has been set.
func (o *NotificationDetail) GetIsFeaturedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFeatured, true
}

// SetIsFeatured sets field value
func (o *NotificationDetail) SetIsFeatured(v bool) {
	o.IsFeatured = v
}

func (o NotificationDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["summary"] = o.Summary
	}
	if true {
		toSerialize["featured_image"] = o.FeaturedImage
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["is_unread"] = o.IsUnread
	}
	if true {
		toSerialize["is_featured"] = o.IsFeatured
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationDetail struct {
	value *NotificationDetail
	isSet bool
}

func (v NullableNotificationDetail) Get() *NotificationDetail {
	return v.value
}

func (v *NullableNotificationDetail) Set(val *NotificationDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationDetail(val *NotificationDetail) *NullableNotificationDetail {
	return &NullableNotificationDetail{value: val, isSet: true}
}

func (v NullableNotificationDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


