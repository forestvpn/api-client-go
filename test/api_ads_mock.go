// Code generated by MockGen. DO NOT EDIT.
// Source: ../api-client-go/api_ads.go

// Package forestvpn_api_test is a generated GoMock package.
package forestvpn_api_test

import (
	context "context"
	http "net/http"
	reflect "reflect"

	api_client_go "github.com/forestvpn/api-client-go"
	gomock "github.com/golang/mock/gomock"
)

// MockAdsApi is a mock of AdsApi interface.
type MockAdsApi struct {
	ctrl     *gomock.Controller
	recorder *MockAdsApiMockRecorder
}

// MockAdsApiMockRecorder is the mock recorder for MockAdsApi.
type MockAdsApiMockRecorder struct {
	mock *MockAdsApi
}

// NewMockAdsApi creates a new mock instance.
func NewMockAdsApi(ctrl *gomock.Controller) *MockAdsApi {
	mock := &MockAdsApi{ctrl: ctrl}
	mock.recorder = &MockAdsApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdsApi) EXPECT() *MockAdsApiMockRecorder {
	return m.recorder
}

// CreateAdUnitRequestLog mocks base method.
func (m *MockAdsApi) CreateAdUnitRequestLog(ctx context.Context) api_client_go.ApiCreateAdUnitRequestLogRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdUnitRequestLog", ctx)
	ret0, _ := ret[0].(api_client_go.ApiCreateAdUnitRequestLogRequest)
	return ret0
}

// CreateAdUnitRequestLog indicates an expected call of CreateAdUnitRequestLog.
func (mr *MockAdsApiMockRecorder) CreateAdUnitRequestLog(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdUnitRequestLog", reflect.TypeOf((*MockAdsApi)(nil).CreateAdUnitRequestLog), ctx)
}

// CreateAdUnitRequestLogExecute mocks base method.
func (m *MockAdsApi) CreateAdUnitRequestLogExecute(r api_client_go.ApiCreateAdUnitRequestLogRequest) (*api_client_go.CreateAdUnitRequestLogRequest, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdUnitRequestLogExecute", r)
	ret0, _ := ret[0].(*api_client_go.CreateAdUnitRequestLogRequest)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateAdUnitRequestLogExecute indicates an expected call of CreateAdUnitRequestLogExecute.
func (mr *MockAdsApiMockRecorder) CreateAdUnitRequestLogExecute(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdUnitRequestLogExecute", reflect.TypeOf((*MockAdsApi)(nil).CreateAdUnitRequestLogExecute), r)
}

// ListAdPlacements mocks base method.
func (m *MockAdsApi) ListAdPlacements(ctx context.Context) api_client_go.ApiListAdPlacementsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAdPlacements", ctx)
	ret0, _ := ret[0].(api_client_go.ApiListAdPlacementsRequest)
	return ret0
}

// ListAdPlacements indicates an expected call of ListAdPlacements.
func (mr *MockAdsApiMockRecorder) ListAdPlacements(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAdPlacements", reflect.TypeOf((*MockAdsApi)(nil).ListAdPlacements), ctx)
}

// ListAdPlacementsExecute mocks base method.
func (m *MockAdsApi) ListAdPlacementsExecute(r api_client_go.ApiListAdPlacementsRequest) ([]api_client_go.AdPlacement, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAdPlacementsExecute", r)
	ret0, _ := ret[0].([]api_client_go.AdPlacement)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListAdPlacementsExecute indicates an expected call of ListAdPlacementsExecute.
func (mr *MockAdsApiMockRecorder) ListAdPlacementsExecute(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAdPlacementsExecute", reflect.TypeOf((*MockAdsApi)(nil).ListAdPlacementsExecute), r)
}
