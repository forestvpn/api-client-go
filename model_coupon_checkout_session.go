/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// checks if the CouponCheckoutSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CouponCheckoutSession{}

// CouponCheckoutSession struct for CouponCheckoutSession
type CouponCheckoutSession struct {
	Key string `json:"key"`
	Discount float64 `json:"discount"`
}

// NewCouponCheckoutSession instantiates a new CouponCheckoutSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCouponCheckoutSession(key string, discount float64) *CouponCheckoutSession {
	this := CouponCheckoutSession{}
	this.Key = key
	this.Discount = discount
	return &this
}

// NewCouponCheckoutSessionWithDefaults instantiates a new CouponCheckoutSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCouponCheckoutSessionWithDefaults() *CouponCheckoutSession {
	this := CouponCheckoutSession{}
	return &this
}

// GetKey returns the Key field value
func (o *CouponCheckoutSession) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CouponCheckoutSession) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CouponCheckoutSession) SetKey(v string) {
	o.Key = v
}

// GetDiscount returns the Discount field value
func (o *CouponCheckoutSession) GetDiscount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value
// and a boolean to check if the value has been set.
func (o *CouponCheckoutSession) GetDiscountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discount, true
}

// SetDiscount sets field value
func (o *CouponCheckoutSession) SetDiscount(v float64) {
	o.Discount = v
}

func (o CouponCheckoutSession) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CouponCheckoutSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["discount"] = o.Discount
	return toSerialize, nil
}

type NullableCouponCheckoutSession struct {
	value *CouponCheckoutSession
	isSet bool
}

func (v NullableCouponCheckoutSession) Get() *CouponCheckoutSession {
	return v.value
}

func (v *NullableCouponCheckoutSession) Set(val *CouponCheckoutSession) {
	v.value = val
	v.isSet = true
}

func (v NullableCouponCheckoutSession) IsSet() bool {
	return v.isSet
}

func (v *NullableCouponCheckoutSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCouponCheckoutSession(val *CouponCheckoutSession) *NullableCouponCheckoutSession {
	return &NullableCouponCheckoutSession{value: val, isSet: true}
}

func (v NullableCouponCheckoutSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCouponCheckoutSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


