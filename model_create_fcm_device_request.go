/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// checks if the CreateFCMDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFCMDeviceRequest{}

// CreateFCMDeviceRequest struct for CreateFCMDeviceRequest
type CreateFCMDeviceRequest struct {
	RegistrationId string `json:"registration_id"`
	DeviceId NullableString `json:"device_id,omitempty"`
	Active bool `json:"active"`
}

// NewCreateFCMDeviceRequest instantiates a new CreateFCMDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFCMDeviceRequest(registrationId string, active bool) *CreateFCMDeviceRequest {
	this := CreateFCMDeviceRequest{}
	this.RegistrationId = registrationId
	this.Active = active
	return &this
}

// NewCreateFCMDeviceRequestWithDefaults instantiates a new CreateFCMDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFCMDeviceRequestWithDefaults() *CreateFCMDeviceRequest {
	this := CreateFCMDeviceRequest{}
	return &this
}

// GetRegistrationId returns the RegistrationId field value
func (o *CreateFCMDeviceRequest) GetRegistrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistrationId
}

// GetRegistrationIdOk returns a tuple with the RegistrationId field value
// and a boolean to check if the value has been set.
func (o *CreateFCMDeviceRequest) GetRegistrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistrationId, true
}

// SetRegistrationId sets field value
func (o *CreateFCMDeviceRequest) SetRegistrationId(v string) {
	o.RegistrationId = v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFCMDeviceRequest) GetDeviceId() string {
	if o == nil || isNil(o.DeviceId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFCMDeviceRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *CreateFCMDeviceRequest) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *CreateFCMDeviceRequest) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}
// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *CreateFCMDeviceRequest) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *CreateFCMDeviceRequest) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetActive returns the Active field value
func (o *CreateFCMDeviceRequest) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *CreateFCMDeviceRequest) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *CreateFCMDeviceRequest) SetActive(v bool) {
	o.Active = v
}

func (o CreateFCMDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFCMDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["registration_id"] = o.RegistrationId
	if o.DeviceId.IsSet() {
		toSerialize["device_id"] = o.DeviceId.Get()
	}
	toSerialize["active"] = o.Active
	return toSerialize, nil
}

type NullableCreateFCMDeviceRequest struct {
	value *CreateFCMDeviceRequest
	isSet bool
}

func (v NullableCreateFCMDeviceRequest) Get() *CreateFCMDeviceRequest {
	return v.value
}

func (v *NullableCreateFCMDeviceRequest) Set(val *CreateFCMDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFCMDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFCMDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFCMDeviceRequest(val *CreateFCMDeviceRequest) *NullableCreateFCMDeviceRequest {
	return &NullableCreateFCMDeviceRequest{value: val, isSet: true}
}

func (v NullableCreateFCMDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFCMDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


