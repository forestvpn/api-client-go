/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
	"time"
)

// FriendshipInvitation struct for FriendshipInvitation
type FriendshipInvitation struct {
	Code string `json:"code"`
	User User `json:"user"`
	ShareText string `json:"share_text"`
	CreatedAt time.Time `json:"created_at"`
}

// NewFriendshipInvitation instantiates a new FriendshipInvitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFriendshipInvitation(code string, user User, shareText string, createdAt time.Time) *FriendshipInvitation {
	this := FriendshipInvitation{}
	this.Code = code
	this.User = user
	this.ShareText = shareText
	this.CreatedAt = createdAt
	return &this
}

// NewFriendshipInvitationWithDefaults instantiates a new FriendshipInvitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFriendshipInvitationWithDefaults() *FriendshipInvitation {
	this := FriendshipInvitation{}
	return &this
}

// GetCode returns the Code field value
func (o *FriendshipInvitation) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *FriendshipInvitation) GetCodeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *FriendshipInvitation) SetCode(v string) {
	o.Code = v
}

// GetUser returns the User field value
func (o *FriendshipInvitation) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *FriendshipInvitation) GetUserOk() (*User, bool) {
	if o == nil {
    return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *FriendshipInvitation) SetUser(v User) {
	o.User = v
}

// GetShareText returns the ShareText field value
func (o *FriendshipInvitation) GetShareText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareText
}

// GetShareTextOk returns a tuple with the ShareText field value
// and a boolean to check if the value has been set.
func (o *FriendshipInvitation) GetShareTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ShareText, true
}

// SetShareText sets field value
func (o *FriendshipInvitation) SetShareText(v string) {
	o.ShareText = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *FriendshipInvitation) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FriendshipInvitation) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FriendshipInvitation) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o FriendshipInvitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["share_text"] = o.ShareText
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableFriendshipInvitation struct {
	value *FriendshipInvitation
	isSet bool
}

func (v NullableFriendshipInvitation) Get() *FriendshipInvitation {
	return v.value
}

func (v *NullableFriendshipInvitation) Set(val *FriendshipInvitation) {
	v.value = val
	v.isSet = true
}

func (v NullableFriendshipInvitation) IsSet() bool {
	return v.isSet
}

func (v *NullableFriendshipInvitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFriendshipInvitation(val *FriendshipInvitation) *NullableFriendshipInvitation {
	return &NullableFriendshipInvitation{value: val, isSet: true}
}

func (v NullableFriendshipInvitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFriendshipInvitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


