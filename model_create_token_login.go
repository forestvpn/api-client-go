/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// checks if the CreateTokenLogin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTokenLogin{}

// CreateTokenLogin struct for CreateTokenLogin
type CreateTokenLogin struct {
	JwtToken string `json:"jwt_token"`
}

// NewCreateTokenLogin instantiates a new CreateTokenLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTokenLogin(jwtToken string) *CreateTokenLogin {
	this := CreateTokenLogin{}
	this.JwtToken = jwtToken
	return &this
}

// NewCreateTokenLoginWithDefaults instantiates a new CreateTokenLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokenLoginWithDefaults() *CreateTokenLogin {
	this := CreateTokenLogin{}
	return &this
}

// GetJwtToken returns the JwtToken field value
func (o *CreateTokenLogin) GetJwtToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JwtToken
}

// GetJwtTokenOk returns a tuple with the JwtToken field value
// and a boolean to check if the value has been set.
func (o *CreateTokenLogin) GetJwtTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwtToken, true
}

// SetJwtToken sets field value
func (o *CreateTokenLogin) SetJwtToken(v string) {
	o.JwtToken = v
}

func (o CreateTokenLogin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTokenLogin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jwt_token"] = o.JwtToken
	return toSerialize, nil
}

type NullableCreateTokenLogin struct {
	value *CreateTokenLogin
	isSet bool
}

func (v NullableCreateTokenLogin) Get() *CreateTokenLogin {
	return v.value
}

func (v *NullableCreateTokenLogin) Set(val *CreateTokenLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTokenLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTokenLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTokenLogin(val *CreateTokenLogin) *NullableCreateTokenLogin {
	return &NullableCreateTokenLogin{value: val, isSet: true}
}

func (v NullableCreateTokenLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTokenLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


