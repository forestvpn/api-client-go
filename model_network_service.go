/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// NetworkService struct for NetworkService
type NetworkService struct {
	Proto string `json:"proto"`
	ConnectionUri string `json:"connection_uri"`
}

// NewNetworkService instantiates a new NetworkService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkService(proto string, connectionUri string) *NetworkService {
	this := NetworkService{}
	this.Proto = proto
	this.ConnectionUri = connectionUri
	return &this
}

// NewNetworkServiceWithDefaults instantiates a new NetworkService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkServiceWithDefaults() *NetworkService {
	this := NetworkService{}
	return &this
}

// GetProto returns the Proto field value
func (o *NetworkService) GetProto() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Proto
}

// GetProtoOk returns a tuple with the Proto field value
// and a boolean to check if the value has been set.
func (o *NetworkService) GetProtoOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Proto, true
}

// SetProto sets field value
func (o *NetworkService) SetProto(v string) {
	o.Proto = v
}

// GetConnectionUri returns the ConnectionUri field value
func (o *NetworkService) GetConnectionUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionUri
}

// GetConnectionUriOk returns a tuple with the ConnectionUri field value
// and a boolean to check if the value has been set.
func (o *NetworkService) GetConnectionUriOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionUri, true
}

// SetConnectionUri sets field value
func (o *NetworkService) SetConnectionUri(v string) {
	o.ConnectionUri = v
}

func (o NetworkService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["proto"] = o.Proto
	}
	if true {
		toSerialize["connection_uri"] = o.ConnectionUri
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkService struct {
	value *NetworkService
	isSet bool
}

func (v NullableNetworkService) Get() *NetworkService {
	return v.value
}

func (v *NullableNetworkService) Set(val *NetworkService) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkService) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkService(val *NetworkService) *NullableNetworkService {
	return &NullableNetworkService{value: val, isSet: true}
}

func (v NullableNetworkService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


