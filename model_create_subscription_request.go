/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// CreateSubscriptionRequest struct for CreateSubscriptionRequest
type CreateSubscriptionRequest struct {
	// Product id
	Product string `json:"product"`
	// Promotion Codes is a Billing and Checkout feature which enables you to generate customer facing codes which can be redeemed to apply a coupon to an order. Promotion Codes have advanced validation features which allow you to specify when and on what orders the codes can be redeemed. 
	PromotionCode *string `json:"promotion_code,omitempty"`
}

// NewCreateSubscriptionRequest instantiates a new CreateSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionRequest(product string) *CreateSubscriptionRequest {
	this := CreateSubscriptionRequest{}
	this.Product = product
	return &this
}

// NewCreateSubscriptionRequestWithDefaults instantiates a new CreateSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionRequestWithDefaults() *CreateSubscriptionRequest {
	this := CreateSubscriptionRequest{}
	return &this
}

// GetProduct returns the Product field value
func (o *CreateSubscriptionRequest) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetProductOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *CreateSubscriptionRequest) SetProduct(v string) {
	o.Product = v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetPromotionCode() string {
	if o == nil || isNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetPromotionCodeOk() (*string, bool) {
	if o == nil || isNil(o.PromotionCode) {
    return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasPromotionCode() bool {
	if o != nil && !isNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *CreateSubscriptionRequest) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

func (o CreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["product"] = o.Product
	}
	if !isNil(o.PromotionCode) {
		toSerialize["promotion_code"] = o.PromotionCode
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubscriptionRequest struct {
	value *CreateSubscriptionRequest
	isSet bool
}

func (v NullableCreateSubscriptionRequest) Get() *CreateSubscriptionRequest {
	return v.value
}

func (v *NullableCreateSubscriptionRequest) Set(val *CreateSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionRequest(val *CreateSubscriptionRequest) *NullableCreateSubscriptionRequest {
	return &NullableCreateSubscriptionRequest{value: val, isSet: true}
}

func (v NullableCreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


