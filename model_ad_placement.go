/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// AdPlacement struct for AdPlacement
type AdPlacement struct {
	Id string `json:"id"`
	Slug string `json:"slug"`
	Units []AdUnit `json:"units"`
}

// NewAdPlacement instantiates a new AdPlacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdPlacement(id string, slug string, units []AdUnit) *AdPlacement {
	this := AdPlacement{}
	this.Id = id
	this.Slug = slug
	this.Units = units
	return &this
}

// NewAdPlacementWithDefaults instantiates a new AdPlacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdPlacementWithDefaults() *AdPlacement {
	this := AdPlacement{}
	return &this
}

// GetId returns the Id field value
func (o *AdPlacement) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AdPlacement) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AdPlacement) SetId(v string) {
	o.Id = v
}

// GetSlug returns the Slug field value
func (o *AdPlacement) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *AdPlacement) GetSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *AdPlacement) SetSlug(v string) {
	o.Slug = v
}

// GetUnits returns the Units field value
func (o *AdPlacement) GetUnits() []AdUnit {
	if o == nil {
		var ret []AdUnit
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *AdPlacement) GetUnitsOk() ([]AdUnit, bool) {
	if o == nil {
    return nil, false
	}
	return o.Units, true
}

// SetUnits sets field value
func (o *AdPlacement) SetUnits(v []AdUnit) {
	o.Units = v
}

func (o AdPlacement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["slug"] = o.Slug
	}
	if true {
		toSerialize["units"] = o.Units
	}
	return json.Marshal(toSerialize)
}

type NullableAdPlacement struct {
	value *AdPlacement
	isSet bool
}

func (v NullableAdPlacement) Get() *AdPlacement {
	return v.value
}

func (v *NullableAdPlacement) Set(val *AdPlacement) {
	v.value = val
	v.isSet = true
}

func (v NullableAdPlacement) IsSet() bool {
	return v.isSet
}

func (v *NullableAdPlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdPlacement(val *AdPlacement) *NullableAdPlacement {
	return &NullableAdPlacement{value: val, isSet: true}
}

func (v NullableAdPlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdPlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


