/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// checks if the UserDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDevice{}

// UserDevice struct for UserDevice
type UserDevice struct {
	AppsflyerId *string `json:"appsflyer_id,omitempty"`
	Gaid *string `json:"gaid,omitempty"`
	Idfa *string `json:"idfa,omitempty"`
	Idfv *string `json:"idfv,omitempty"`
	Oaid *string `json:"oaid,omitempty"`
	AmazonAid *string `json:"amazon_aid,omitempty"`
	Imei *string `json:"imei,omitempty"`
	Ref *string `json:"ref,omitempty"`
}

// NewUserDevice instantiates a new UserDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDevice() *UserDevice {
	this := UserDevice{}
	return &this
}

// NewUserDeviceWithDefaults instantiates a new UserDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDeviceWithDefaults() *UserDevice {
	this := UserDevice{}
	return &this
}

// GetAppsflyerId returns the AppsflyerId field value if set, zero value otherwise.
func (o *UserDevice) GetAppsflyerId() string {
	if o == nil || isNil(o.AppsflyerId) {
		var ret string
		return ret
	}
	return *o.AppsflyerId
}

// GetAppsflyerIdOk returns a tuple with the AppsflyerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetAppsflyerIdOk() (*string, bool) {
	if o == nil || isNil(o.AppsflyerId) {
		return nil, false
	}
	return o.AppsflyerId, true
}

// HasAppsflyerId returns a boolean if a field has been set.
func (o *UserDevice) HasAppsflyerId() bool {
	if o != nil && !isNil(o.AppsflyerId) {
		return true
	}

	return false
}

// SetAppsflyerId gets a reference to the given string and assigns it to the AppsflyerId field.
func (o *UserDevice) SetAppsflyerId(v string) {
	o.AppsflyerId = &v
}

// GetGaid returns the Gaid field value if set, zero value otherwise.
func (o *UserDevice) GetGaid() string {
	if o == nil || isNil(o.Gaid) {
		var ret string
		return ret
	}
	return *o.Gaid
}

// GetGaidOk returns a tuple with the Gaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetGaidOk() (*string, bool) {
	if o == nil || isNil(o.Gaid) {
		return nil, false
	}
	return o.Gaid, true
}

// HasGaid returns a boolean if a field has been set.
func (o *UserDevice) HasGaid() bool {
	if o != nil && !isNil(o.Gaid) {
		return true
	}

	return false
}

// SetGaid gets a reference to the given string and assigns it to the Gaid field.
func (o *UserDevice) SetGaid(v string) {
	o.Gaid = &v
}

// GetIdfa returns the Idfa field value if set, zero value otherwise.
func (o *UserDevice) GetIdfa() string {
	if o == nil || isNil(o.Idfa) {
		var ret string
		return ret
	}
	return *o.Idfa
}

// GetIdfaOk returns a tuple with the Idfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetIdfaOk() (*string, bool) {
	if o == nil || isNil(o.Idfa) {
		return nil, false
	}
	return o.Idfa, true
}

// HasIdfa returns a boolean if a field has been set.
func (o *UserDevice) HasIdfa() bool {
	if o != nil && !isNil(o.Idfa) {
		return true
	}

	return false
}

// SetIdfa gets a reference to the given string and assigns it to the Idfa field.
func (o *UserDevice) SetIdfa(v string) {
	o.Idfa = &v
}

// GetIdfv returns the Idfv field value if set, zero value otherwise.
func (o *UserDevice) GetIdfv() string {
	if o == nil || isNil(o.Idfv) {
		var ret string
		return ret
	}
	return *o.Idfv
}

// GetIdfvOk returns a tuple with the Idfv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetIdfvOk() (*string, bool) {
	if o == nil || isNil(o.Idfv) {
		return nil, false
	}
	return o.Idfv, true
}

// HasIdfv returns a boolean if a field has been set.
func (o *UserDevice) HasIdfv() bool {
	if o != nil && !isNil(o.Idfv) {
		return true
	}

	return false
}

// SetIdfv gets a reference to the given string and assigns it to the Idfv field.
func (o *UserDevice) SetIdfv(v string) {
	o.Idfv = &v
}

// GetOaid returns the Oaid field value if set, zero value otherwise.
func (o *UserDevice) GetOaid() string {
	if o == nil || isNil(o.Oaid) {
		var ret string
		return ret
	}
	return *o.Oaid
}

// GetOaidOk returns a tuple with the Oaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetOaidOk() (*string, bool) {
	if o == nil || isNil(o.Oaid) {
		return nil, false
	}
	return o.Oaid, true
}

// HasOaid returns a boolean if a field has been set.
func (o *UserDevice) HasOaid() bool {
	if o != nil && !isNil(o.Oaid) {
		return true
	}

	return false
}

// SetOaid gets a reference to the given string and assigns it to the Oaid field.
func (o *UserDevice) SetOaid(v string) {
	o.Oaid = &v
}

// GetAmazonAid returns the AmazonAid field value if set, zero value otherwise.
func (o *UserDevice) GetAmazonAid() string {
	if o == nil || isNil(o.AmazonAid) {
		var ret string
		return ret
	}
	return *o.AmazonAid
}

// GetAmazonAidOk returns a tuple with the AmazonAid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetAmazonAidOk() (*string, bool) {
	if o == nil || isNil(o.AmazonAid) {
		return nil, false
	}
	return o.AmazonAid, true
}

// HasAmazonAid returns a boolean if a field has been set.
func (o *UserDevice) HasAmazonAid() bool {
	if o != nil && !isNil(o.AmazonAid) {
		return true
	}

	return false
}

// SetAmazonAid gets a reference to the given string and assigns it to the AmazonAid field.
func (o *UserDevice) SetAmazonAid(v string) {
	o.AmazonAid = &v
}

// GetImei returns the Imei field value if set, zero value otherwise.
func (o *UserDevice) GetImei() string {
	if o == nil || isNil(o.Imei) {
		var ret string
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetImeiOk() (*string, bool) {
	if o == nil || isNil(o.Imei) {
		return nil, false
	}
	return o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *UserDevice) HasImei() bool {
	if o != nil && !isNil(o.Imei) {
		return true
	}

	return false
}

// SetImei gets a reference to the given string and assigns it to the Imei field.
func (o *UserDevice) SetImei(v string) {
	o.Imei = &v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *UserDevice) GetRef() string {
	if o == nil || isNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDevice) GetRefOk() (*string, bool) {
	if o == nil || isNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *UserDevice) HasRef() bool {
	if o != nil && !isNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *UserDevice) SetRef(v string) {
	o.Ref = &v
}

func (o UserDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AppsflyerId) {
		toSerialize["appsflyer_id"] = o.AppsflyerId
	}
	if !isNil(o.Gaid) {
		toSerialize["gaid"] = o.Gaid
	}
	if !isNil(o.Idfa) {
		toSerialize["idfa"] = o.Idfa
	}
	if !isNil(o.Idfv) {
		toSerialize["idfv"] = o.Idfv
	}
	if !isNil(o.Oaid) {
		toSerialize["oaid"] = o.Oaid
	}
	if !isNil(o.AmazonAid) {
		toSerialize["amazon_aid"] = o.AmazonAid
	}
	if !isNil(o.Imei) {
		toSerialize["imei"] = o.Imei
	}
	if !isNil(o.Ref) {
		toSerialize["ref"] = o.Ref
	}
	return toSerialize, nil
}

type NullableUserDevice struct {
	value *UserDevice
	isSet bool
}

func (v NullableUserDevice) Get() *UserDevice {
	return v.value
}

func (v *NullableUserDevice) Set(val *UserDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDevice(val *UserDevice) *NullableUserDevice {
	return &NullableUserDevice{value: val, isSet: true}
}

func (v NullableUserDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


