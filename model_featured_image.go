/*
ForestVPN API

ForestVPN defeats content restrictions and censorship to deliver unlimited access to video, music, social media, and more, from anywhere in the world. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// FeaturedImage struct for FeaturedImage
type FeaturedImage struct {
	Small string `json:"small"`
	Medium string `json:"medium"`
	Large string `json:"large"`
	XLarge string `json:"x-large"`
	XLarge2 string `json:"x-large@2"`
}

// NewFeaturedImage instantiates a new FeaturedImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeaturedImage(small string, medium string, large string, xLarge string, xLarge2 string) *FeaturedImage {
	this := FeaturedImage{}
	this.Small = small
	this.Medium = medium
	this.Large = large
	this.XLarge = xLarge
	this.XLarge2 = xLarge2
	return &this
}

// NewFeaturedImageWithDefaults instantiates a new FeaturedImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeaturedImageWithDefaults() *FeaturedImage {
	this := FeaturedImage{}
	return &this
}

// GetSmall returns the Small field value
func (o *FeaturedImage) GetSmall() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Small
}

// GetSmallOk returns a tuple with the Small field value
// and a boolean to check if the value has been set.
func (o *FeaturedImage) GetSmallOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Small, true
}

// SetSmall sets field value
func (o *FeaturedImage) SetSmall(v string) {
	o.Small = v
}

// GetMedium returns the Medium field value
func (o *FeaturedImage) GetMedium() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Medium
}

// GetMediumOk returns a tuple with the Medium field value
// and a boolean to check if the value has been set.
func (o *FeaturedImage) GetMediumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Medium, true
}

// SetMedium sets field value
func (o *FeaturedImage) SetMedium(v string) {
	o.Medium = v
}

// GetLarge returns the Large field value
func (o *FeaturedImage) GetLarge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Large
}

// GetLargeOk returns a tuple with the Large field value
// and a boolean to check if the value has been set.
func (o *FeaturedImage) GetLargeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Large, true
}

// SetLarge sets field value
func (o *FeaturedImage) SetLarge(v string) {
	o.Large = v
}

// GetXLarge returns the XLarge field value
func (o *FeaturedImage) GetXLarge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.XLarge
}

// GetXLargeOk returns a tuple with the XLarge field value
// and a boolean to check if the value has been set.
func (o *FeaturedImage) GetXLargeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.XLarge, true
}

// SetXLarge sets field value
func (o *FeaturedImage) SetXLarge(v string) {
	o.XLarge = v
}

// GetXLarge2 returns the XLarge2 field value
func (o *FeaturedImage) GetXLarge2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.XLarge2
}

// GetXLarge2Ok returns a tuple with the XLarge2 field value
// and a boolean to check if the value has been set.
func (o *FeaturedImage) GetXLarge2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.XLarge2, true
}

// SetXLarge2 sets field value
func (o *FeaturedImage) SetXLarge2(v string) {
	o.XLarge2 = v
}

func (o FeaturedImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["small"] = o.Small
	}
	if true {
		toSerialize["medium"] = o.Medium
	}
	if true {
		toSerialize["large"] = o.Large
	}
	if true {
		toSerialize["x-large"] = o.XLarge
	}
	if true {
		toSerialize["x-large@2"] = o.XLarge2
	}
	return json.Marshal(toSerialize)
}

type NullableFeaturedImage struct {
	value *FeaturedImage
	isSet bool
}

func (v NullableFeaturedImage) Get() *FeaturedImage {
	return v.value
}

func (v *NullableFeaturedImage) Set(val *FeaturedImage) {
	v.value = val
	v.isSet = true
}

func (v NullableFeaturedImage) IsSet() bool {
	return v.isSet
}

func (v *NullableFeaturedImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeaturedImage(val *FeaturedImage) *NullableFeaturedImage {
	return &NullableFeaturedImage{value: val, isSet: true}
}

func (v NullableFeaturedImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeaturedImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


