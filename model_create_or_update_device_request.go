/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// checks if the CreateOrUpdateDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateDeviceRequest{}

// CreateOrUpdateDeviceRequest struct for CreateOrUpdateDeviceRequest
type CreateOrUpdateDeviceRequest struct {
	ExternalKey NullableString `json:"external_key,omitempty"`
	Name *string `json:"name,omitempty"`
	Location NullableString `json:"location,omitempty"`
	TorOver *bool `json:"tor_over,omitempty"`
	ConnectionMode NullableString `json:"connection_mode,omitempty"`
	RandomServer *bool `json:"random_server,omitempty"`
	Info NullableCreateOrUpdateDeviceRequestInfo `json:"info,omitempty"`
}

// NewCreateOrUpdateDeviceRequest instantiates a new CreateOrUpdateDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateDeviceRequest() *CreateOrUpdateDeviceRequest {
	this := CreateOrUpdateDeviceRequest{}
	var torOver bool = false
	this.TorOver = &torOver
	var randomServer bool = false
	this.RandomServer = &randomServer
	return &this
}

// NewCreateOrUpdateDeviceRequestWithDefaults instantiates a new CreateOrUpdateDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateDeviceRequestWithDefaults() *CreateOrUpdateDeviceRequest {
	this := CreateOrUpdateDeviceRequest{}
	var torOver bool = false
	this.TorOver = &torOver
	var randomServer bool = false
	this.RandomServer = &randomServer
	return &this
}

// GetExternalKey returns the ExternalKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDeviceRequest) GetExternalKey() string {
	if o == nil || isNil(o.ExternalKey.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalKey.Get()
}

// GetExternalKeyOk returns a tuple with the ExternalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDeviceRequest) GetExternalKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalKey.Get(), o.ExternalKey.IsSet()
}

// HasExternalKey returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasExternalKey() bool {
	if o != nil && o.ExternalKey.IsSet() {
		return true
	}

	return false
}

// SetExternalKey gets a reference to the given NullableString and assigns it to the ExternalKey field.
func (o *CreateOrUpdateDeviceRequest) SetExternalKey(v string) {
	o.ExternalKey.Set(&v)
}
// SetExternalKeyNil sets the value for ExternalKey to be an explicit nil
func (o *CreateOrUpdateDeviceRequest) SetExternalKeyNil() {
	o.ExternalKey.Set(nil)
}

// UnsetExternalKey ensures that no value is present for ExternalKey, not even an explicit nil
func (o *CreateOrUpdateDeviceRequest) UnsetExternalKey() {
	o.ExternalKey.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateDeviceRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDeviceRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateDeviceRequest) SetName(v string) {
	o.Name = &v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDeviceRequest) GetLocation() string {
	if o == nil || isNil(o.Location.Get()) {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDeviceRequest) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *CreateOrUpdateDeviceRequest) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *CreateOrUpdateDeviceRequest) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *CreateOrUpdateDeviceRequest) UnsetLocation() {
	o.Location.Unset()
}

// GetTorOver returns the TorOver field value if set, zero value otherwise.
func (o *CreateOrUpdateDeviceRequest) GetTorOver() bool {
	if o == nil || isNil(o.TorOver) {
		var ret bool
		return ret
	}
	return *o.TorOver
}

// GetTorOverOk returns a tuple with the TorOver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDeviceRequest) GetTorOverOk() (*bool, bool) {
	if o == nil || isNil(o.TorOver) {
		return nil, false
	}
	return o.TorOver, true
}

// HasTorOver returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasTorOver() bool {
	if o != nil && !isNil(o.TorOver) {
		return true
	}

	return false
}

// SetTorOver gets a reference to the given bool and assigns it to the TorOver field.
func (o *CreateOrUpdateDeviceRequest) SetTorOver(v bool) {
	o.TorOver = &v
}

// GetConnectionMode returns the ConnectionMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDeviceRequest) GetConnectionMode() string {
	if o == nil || isNil(o.ConnectionMode.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectionMode.Get()
}

// GetConnectionModeOk returns a tuple with the ConnectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDeviceRequest) GetConnectionModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionMode.Get(), o.ConnectionMode.IsSet()
}

// HasConnectionMode returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasConnectionMode() bool {
	if o != nil && o.ConnectionMode.IsSet() {
		return true
	}

	return false
}

// SetConnectionMode gets a reference to the given NullableString and assigns it to the ConnectionMode field.
func (o *CreateOrUpdateDeviceRequest) SetConnectionMode(v string) {
	o.ConnectionMode.Set(&v)
}
// SetConnectionModeNil sets the value for ConnectionMode to be an explicit nil
func (o *CreateOrUpdateDeviceRequest) SetConnectionModeNil() {
	o.ConnectionMode.Set(nil)
}

// UnsetConnectionMode ensures that no value is present for ConnectionMode, not even an explicit nil
func (o *CreateOrUpdateDeviceRequest) UnsetConnectionMode() {
	o.ConnectionMode.Unset()
}

// GetRandomServer returns the RandomServer field value if set, zero value otherwise.
func (o *CreateOrUpdateDeviceRequest) GetRandomServer() bool {
	if o == nil || isNil(o.RandomServer) {
		var ret bool
		return ret
	}
	return *o.RandomServer
}

// GetRandomServerOk returns a tuple with the RandomServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDeviceRequest) GetRandomServerOk() (*bool, bool) {
	if o == nil || isNil(o.RandomServer) {
		return nil, false
	}
	return o.RandomServer, true
}

// HasRandomServer returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasRandomServer() bool {
	if o != nil && !isNil(o.RandomServer) {
		return true
	}

	return false
}

// SetRandomServer gets a reference to the given bool and assigns it to the RandomServer field.
func (o *CreateOrUpdateDeviceRequest) SetRandomServer(v bool) {
	o.RandomServer = &v
}

// GetInfo returns the Info field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDeviceRequest) GetInfo() CreateOrUpdateDeviceRequestInfo {
	if o == nil || isNil(o.Info.Get()) {
		var ret CreateOrUpdateDeviceRequestInfo
		return ret
	}
	return *o.Info.Get()
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDeviceRequest) GetInfoOk() (*CreateOrUpdateDeviceRequestInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Info.Get(), o.Info.IsSet()
}

// HasInfo returns a boolean if a field has been set.
func (o *CreateOrUpdateDeviceRequest) HasInfo() bool {
	if o != nil && o.Info.IsSet() {
		return true
	}

	return false
}

// SetInfo gets a reference to the given NullableCreateOrUpdateDeviceRequestInfo and assigns it to the Info field.
func (o *CreateOrUpdateDeviceRequest) SetInfo(v CreateOrUpdateDeviceRequestInfo) {
	o.Info.Set(&v)
}
// SetInfoNil sets the value for Info to be an explicit nil
func (o *CreateOrUpdateDeviceRequest) SetInfoNil() {
	o.Info.Set(nil)
}

// UnsetInfo ensures that no value is present for Info, not even an explicit nil
func (o *CreateOrUpdateDeviceRequest) UnsetInfo() {
	o.Info.Unset()
}

func (o CreateOrUpdateDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalKey.IsSet() {
		toSerialize["external_key"] = o.ExternalKey.Get()
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if !isNil(o.TorOver) {
		toSerialize["tor_over"] = o.TorOver
	}
	if o.ConnectionMode.IsSet() {
		toSerialize["connection_mode"] = o.ConnectionMode.Get()
	}
	if !isNil(o.RandomServer) {
		toSerialize["random_server"] = o.RandomServer
	}
	if o.Info.IsSet() {
		toSerialize["info"] = o.Info.Get()
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateDeviceRequest struct {
	value *CreateOrUpdateDeviceRequest
	isSet bool
}

func (v NullableCreateOrUpdateDeviceRequest) Get() *CreateOrUpdateDeviceRequest {
	return v.value
}

func (v *NullableCreateOrUpdateDeviceRequest) Set(val *CreateOrUpdateDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateDeviceRequest(val *CreateOrUpdateDeviceRequest) *NullableCreateOrUpdateDeviceRequest {
	return &NullableCreateOrUpdateDeviceRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


