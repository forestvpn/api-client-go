/*
ForestVPN API

ForestVPN - Fast, secure, and modern VPN. It offers Distributed Computing, Crypto Mining, P2P, Ad Blocking, TOR over VPN, 30+ locations, and a free version with unlimited data. 

API version: 2.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forestvpn_api

import (
	"encoding/json"
)

// UserAgentOs struct for UserAgentOs
type UserAgentOs struct {
	Family string `json:"family"`
	// It might be empty string
	Version *string `json:"version,omitempty"`
}

// NewUserAgentOs instantiates a new UserAgentOs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAgentOs(family string) *UserAgentOs {
	this := UserAgentOs{}
	this.Family = family
	return &this
}

// NewUserAgentOsWithDefaults instantiates a new UserAgentOs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAgentOsWithDefaults() *UserAgentOs {
	this := UserAgentOs{}
	return &this
}

// GetFamily returns the Family field value
func (o *UserAgentOs) GetFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Family
}

// GetFamilyOk returns a tuple with the Family field value
// and a boolean to check if the value has been set.
func (o *UserAgentOs) GetFamilyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Family, true
}

// SetFamily sets field value
func (o *UserAgentOs) SetFamily(v string) {
	o.Family = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *UserAgentOs) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAgentOs) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *UserAgentOs) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *UserAgentOs) SetVersion(v string) {
	o.Version = &v
}

func (o UserAgentOs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["family"] = o.Family
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableUserAgentOs struct {
	value *UserAgentOs
	isSet bool
}

func (v NullableUserAgentOs) Get() *UserAgentOs {
	return v.value
}

func (v *NullableUserAgentOs) Set(val *UserAgentOs) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAgentOs) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAgentOs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAgentOs(val *UserAgentOs) *NullableUserAgentOs {
	return &NullableUserAgentOs{value: val, isSet: true}
}

func (v NullableUserAgentOs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAgentOs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


